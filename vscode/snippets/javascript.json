{
/*
	// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"Styles className": {
		"prefix": "className",
		"body": [
			"className={styles.${1:className}}"
		],
		"description": "Snippet for className styles"
	},
	"React-Apollo data handling": {
		"prefix": "graphdata",
		"body": [
			"const { loading, error } = this.props.data"
		],
		"description": "Small snippet to deconstruct this.props.data"
	},
	"Bind to self": {
		"prefix": "thisbind",
		"body": [
			"this.${1:function} = this.${1:function}.bind(this)"
		],
		"description": "Snippet to bind to self"
	},
	"ES6 Arrow Function": {
		"prefix": "efn",
		"body": [
			"($1$3) => {$2$3}"
		],
		"description": "Create anonymous arrow function"
	},
	"ES6 Then": {
		"prefix": "ethen",
		"body": [
			".then(() => {",
			"\t$1",
			"})"
		],
		"description": "Create React constructor with empty state"
	},
	"Import React Redux Connect": {
		"prefix": "conne",
		"body": [
			"import { connect } from 'react-redux';$1"
		],
		"description": "Create import connect from react-redux"
	},
	"React Constructor": {
		"prefix": "rcons",
		"body": [
			"constructor(props){",
			"\tsuper(props);",
			"\tthis.state = {$1};",
			"}"
		],
		"description": "Create React constructor with empty state"
	},
	"Redux mapStateToProps": {
		"prefix": "mapStateToProps",
		"body": [
			"const mapStateToProps = (state) => {",
			"\treturn{",
			"\t\t$1: state.$2.$1,",
			"\t};",
			"};"
		],
		"description": "Create Redux's mapStateToProps"
	}
}